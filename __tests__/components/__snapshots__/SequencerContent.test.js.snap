// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SequencerContentComponent /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WithStyles(SequencerContent)
    handleNext={[MockFunction]}
    sequenceGen={Object {}}
    sequenceValues={
      Array [
        2,
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "classes": Object {
        "button": "SequencerContent-button-3",
        "paper": "SequencerContent-paper-2",
        "root": "SequencerContent-root-1",
      },
      "handleNext": [MockFunction],
      "sequenceGen": Object {},
      "sequenceValues": Array [
        2,
      ],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "classes": Object {
          "button": "SequencerContent-button-3",
          "paper": "SequencerContent-paper-2",
          "root": "SequencerContent-root-1",
        },
        "handleNext": [MockFunction],
        "sequenceGen": Object {},
        "sequenceValues": Array [
          2,
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
